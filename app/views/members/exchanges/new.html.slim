span
  | You currently hold 
  strong #{number_to_currency(@coin.member_liability, precision: @coin.subdivision, unit: "")}
  |  #{@coin.code}

br
br
= form_for :exchange, url: exchange_path(@coin), method: :post do |f|
  .row
    p
      | Input values must be integers. The decimal equivalent is shown to the right.
    label
      | Debit
      span#debit
      span
    - if @coin.fiat?
      = f.select :source_coin_id, Coin.crypto.all.map {|coin| [ coin.code, coin.id ] }, { include_blank: true }, class: "select2", id: 'sourceCoinSelect'
    - else
      = f.select :source_coin_id, Coin.not_self(@coin.id).all.map {|coin| [ coin.code, coin.id ] }, { include_blank: true }, class: "select2", id: 'sourceCoinSelect'
    = f.number_field :source_quantity, value: 0, id: 'sourceQuantity', required: true
    = number_field_tag :source_quantity_display, number_with_precision(0, precision: Coin::BTC_SUBDIVISION), step: :any, id: 'sourceQuantityDisplay', readonly: true
    = f.number_field :source_rate, value: number_with_precision(0, precision: Coin::BTC_SUBDIVISION), step: :any, id: 'sourceRate', class: 'hidden', readonly: true, required: true
  .row
    label
      | Credit
    = text_field_tag :destination_coin, @coin.code, style: "width: 71px;"
    = f.number_field :destination_quantity, value: 0, id: 'destinationQuantity', required: true
    = number_field_tag :destination_quantity_display, number_with_precision(0, precision: @coin.subdivision), step: :any, id: 'destinationQuantityDisplay'
  br
  .row
    label Market Rate
    p #{@coin.name} (#{@coin.code}) to Bitcoin (BTC)
    = f.number_field :destination_rate, value: @coin.btc_rate, step: :any, id: "destinationRate", readonly: true
  br
  .row
    #destinationSubdivision.hidden= @coin.subdivision
    = f.hidden_field :previous_transaction_id, value: @previous_transaction&.id
    = f.submit :exchange, class: 'button button-primary', data: { disable_with: "Processing&hellip;".html_safe }
  br

javascript:
  $(document).on('turbolinks:load', function () {
    var coin = JSON.parse('#{raw @coin_as_json}');
    new Exchange(coin);
  });
